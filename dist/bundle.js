(()=>{"use strict";const e=function(e,a){fetch(`${e}&appid=df7ac5c99d7c7f788e64ec68ba2508a3`).then((e=>e.json())).then((e=>a(e)))},a=(e,a)=>`https://api.openweathermap.org/data/2.5/weather?${e}&${a}&units=metric`,s=(e,a)=>`https://api.openweathermap.org/data/2.5/forecast?${e}&${a}&units=metric`,t=(e,a)=>`http://api.openweathermap.org/data/2.5/air_pollution?${e}&${a}`,n=(e,a)=>`http://api.openweathermap.org/geo/1.0/reverse?${e}&${a}&limit=5`,i=e=>`http://api.openweathermap.org/geo/1.0/direct?q=${e}&limit=5`,l=["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],c=["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],r=function(e,a){const s=new Date(1e3*a),t=s.getUTCHours();return`${t%12||12}:${s.getUTCMinutes()} ${t>12?"PM":"AM"}`},o=function(e,a){const s=new Date(1e3*(e+a)).getUTCHours();return`${s%12||12} ${s>12?"PM":"AM"}`},d={1:{level:"Good",message:"Air quality is considered satisfactory, and air pollution poses little or no risk."},2:{level:"Fair",message:"Air quality is acceptable; however, for some pollutants there may be a moderate health concern for a very small number of people who are unusually sensitive to air pollution."},3:{level:"Moderate",message:"Members of sensitive groups may experience health effects. The General public is not likely to be affected."},4:{level:"Poor",message:"Everyone may begin to experience health effects; members of sensitive groups may experience more serious health effects."},5:{level:"Very Poor",message:"Health warnings of emergence conditions. The entire population is more likely to be affected."}},p=function(e,a,s){for(const t of e)t.addEventListener(a,s)},h=document.querySelector("[data-search-view]"),u=document.querySelectorAll("[data-search-toggler]"),m=()=>h.classList.toggle("active");p(u,"click",m);const g=document.querySelector("[data-search-field]"),v=document.querySelector("[data-search-result]");let y=null;g.addEventListener("input",(function(){y??clearTimeout(y),g.value?g.classList.add("searching"):(v.classList.remove("active"),v.innerHTML="",g.classList.remove("searching")),g.value&&(y=setTimeout((()=>{e(i(g.value),(function(e){g.classList.remove("searching"),v.classList.add("active"),v.innerHTML='\n                <ul class="view-list" data-search-list></ul>\n                ';const a=[];for(const{name:s,lat:t,lon:n,country:i,state:l}of e){const e=document.createElement("li");e.classList.add("view-item"),e.innerHTML=`\n                        <span class="m-icon">location_on</span>\n                        <div>\n                            <p class="item-title">${s}</p>      \n                            <p class="label-2 item-subtitle">${l||""} ${i}</p>\n                        </div>\n                        <a href="#/weather?lat=${t}&lon=${n}" class="item-link has-state" aria-label="${s} weather" data-search-toggler></a>\n                    `,v.querySelector("[data-search-list]").appendChild(e),a.push(e.querySelector("[data-search-toggler]"))}p(a,"click",(function(){m(),v.classList.remove("active")}))}))}),500))}));const w=document.querySelector("[data-container]"),$=document.querySelector("[data-loading]"),f=document.querySelector("[data-current-location-btn]"),b=document.querySelector("[data-error-content]"),L=function(i,p){$.style.display="grid",w.style.overflowY="hidden",w.classList.remove("fade-in"),b.style.display="none";const h=document.querySelector("[data-current-weather]"),u=document.querySelector("[data-highlights]"),m=document.querySelector("[data-hourly-forecast]"),g=document.querySelector("[data-5-day-forecast]");h.innerHTML="",u.innerHTML="",m.innerHTML="",g.innerHTML="","#/current-location"===window.location.hash?f.setAttribute("disabled",""):f.removeAttribute("disabled"),e(a(i,p),(function(a){const{weather:v,dt:y,sys:{sunrise:f,sunset:b},main:{temp:L,feels_like:T,pressure:M,humidity:S},visibility:q,timezone:H}=a,[{description:C,icon:_}]=v,P=document.createElement("div");P.classList.add("card","card-lg","current-weather-card"),P.innerHTML=`\n            <h2 class="title-2 card-title">Now</h2>\n                <div class="weapper">\n                    <p class="heading">${parseInt(L)}&deg;<sup>C</sup></p>\n                    <img src="src/images/weather_icons/${_}.png" width="64" height="64" alt="${C}"\n                         class="weather-icon" />\n                </div>\n                <p class="body-3">${C}</p>\n            <ul class="meta-list">\n                <li class="meta-item">\n                    <span class="m-icon">calendar_today</span>\n                    <p class="title-3 meta-text">${function(e,a){const s=new Date(1e3*(e+a)),t=l[s.getUTCDay()],n=c[s.getUTCMonth()];return`${t} ${s.getUTCDate()}, ${n}}`}(y,H)}</p>\n                </li>\n                <li class="meta-item">\n                    <span class="m-icon">location_on</span>\n                    <p class="title-3 meta-text" data-location></p>\n                </li>\n            </ul>\n            `,e(n(i,p),(function([{name:e,country:a}]){P.querySelector("[data-location]").innerHTML=`${e}, ${a}`})),h.appendChild(P),e(t(i,p),(function(e){const[{main:{aqi:a},components:{no2:s,o3:t,so2:n,pm2_5:i}}]=e.list,l=document.createElement("div");l.classList.add("card","card-lg"),l.innerHTML=`\n          <h2 class="title-2" id="highlights-label">\n            Today Highlights\n          </h2>\n      <div class="highlights-list">\n          <div class="card card-sm highlights-card one">\n              <h3 class="title-3">Air Quality Index</h3>\n              <div class="wrapper">\n                  <span class="m-icon">air</span>\n                  <ul class="card-list">\n                      <li class="card-item">\n                          <p class="title-1">${i.toPrecision(3)}</p>\n                          <p class="label-1">\n                              PM<sub>2.5</sub>\n                          </p>\n                      </li>\n                      <li class="card-item">\n                          <p class="title-1">${n.toPrecision(3)}</p>\n                          <p class="label-1">SO<sub>2.5</sub>\n                          </p>\n                      </li>\n                      <li class="card-item">\n                          <p class="title-1">${s.toPrecision(3)}</p>\n                          <p class="label-1">NO<sub>2</sub></p>\n                      </li>\n                      <li class="card-item">\n                          <p class="title-1">${t.toPrecision(3)}</p>\n                          <p class="label-1">O<sub>3</sub>\n                          </p>\n                      </li>\n                  </ul>\n              </div>\n              <span class="badge aqi-${a} label-${a}" title="${d[a].message}">\n                ${d[a].level}\n              </span>\n          </div>\n          <div class="card card-sm highlights-card two">\n              <h3 class="title-3">Sunrise & Sunset</h3>\n              <div class="card-list">\n                  <div class="card-item">\n                      <span class="m-icon">clear_day</span>\n                      <div>\n                          <p class="label-1">Sunrise</p>\n                          <p class="title-1">${r(0,H)}</p>\n                      </div>\n                  </div>\n                  <div class="card-item">\n                      <span class="m-icon">clear_night</span>\n                      <div>\n                          <p class="label-1">Sunset</p>\n                          <p class="title-1">${r(0,H)}</p>\n                      </div>\n                  </div>\n              </div>\n          </div>\n          <div class="card card-sm highlights-card">\n              <h3 class="title3">Humidity</h3>\n              <div class="wrapper">\n                  <span class="m-icon">humidity_percentage</span>\n                  <p class="title-1">${S}<sub>%</sub></p>\n              </div>\n          </div>\n          <div class="card card-sm highlights-card">\n              <h3 class="title3">Pressure</h3>\n              <div class="wrapper">\n                  <span class="m-icon">airwave</span>\n                  <p class="title-1">${M}<sup>hPa</sup>\n                  </p>\n              </div>\n          </div>\n          <div class="card card-sm highlights-card">\n              <h3 class="title3">Visibility</h3>\n              <div class="wrapper">\n                  <span class="m-icon">visibility</span>\n                  <p class="title-1">${q/1e3}<sub>km</sub></p>\n              </div>\n          </div>\n          <div class="card card-sm highlights-card">\n              <h3 class="title3">Feels Like</h3>\n              <div class="wrapper">\n                  <span class="m-icon">thermostat</span>\n                  <p class="title-1">${parseInt(T)}&deg;<sup>c</sup>\n                  </p>\n              </div>\n          </div>\n      </div>\n          `,u.appendChild(l)})),e(s(i,p),(function(e){const{list:a,city:{timezone:s}}=e;m.innerHTML='\n          <h3 class="title-2">Today at</h3>\n          <div class="slider-container">\n              <ul class="slider-list" data-temp></ul>\n              <ul class="slider-list" data-wind></ul>\n          </div>\n      ';for(const[e,n]of a.entries()){if(e>7)break;const{dt:a,main:{temp:i},weather:l,wind:{deg:c,speed:r}}=n,[{icon:d,description:p}]=l,h=document.createElement("li");h.classList.add("slider-item"),h.innerHTML=`\n          <div class="card card-sm slider-card">\n            <p class="body-3">${o(a,s)}</p>\n            <img src="src/images/weather_icons/${d}.png" width="48" height="48" loading="lazy"\n                alt="${p}" class="weather-icon" title="${p}">\n            <p class="body-3">${parseInt(i)}&deg;</p>\n          </div>\n            `,m.querySelector("[data-temp]").appendChild(h);const u=document.createElement("li");u.classList.add("slider-item"),u.innerHTML=`\n          <div class="card card-sm slider-card">\n            <p class="body-3">${o(a,s)}</p>\n            <img src="src/images/weather_icons/direction.png" width="48" height="48"\n                loading="lazy" alt="direction" class="weather-icon" style="transform: rotate(${c-180}deg)">\n            <p class="body-3">${parseInt((t=r,3600*t/1e3))}km/h</p>\n          </div>\n        `,m.querySelector("[data-wind]").appendChild(u)}var t;g.innerHTML='\n          <h2 class="title-2" id="forecast-label">\n          5 Days Forecast\n          </h2>\n\n       <div class="card card-lg forecast-card">\n          <ul data-forecast-list></ul>\n        </div>\n      ';for(let e=7,s=a.length;e<s;e+=8){const{main:{temp_max:s},weather:t,dt_txt:n}=a[e],[{icon:i,description:r}]=t,o=new Date(n),d=document.createElement("li");d.classList.add("card-item"),d.innerHTML=`\n          <div class="icon-wrapper">\n            <img src="src/images/weather_icons/${i}.png" width="36" height="36"\n                alt="${r}" class="weather-icon" title="${r}">\n            <span class="span">\n                <p class="title-2">${parseInt(s)}&deg;</p>\n            </span>\n          </div>\n              <p class="label-1">${o.getDate()} ${c[o.getUTCMonth()]}</p>\n              <p class="label-1">${l[o.getUTCDay()]}</p>\n        `,g.querySelector("[data-forecast-list]").appendChild(d)}$.style.display="none",w.style.overflowY="overlay",w.classList.add("fade-in")}))}))},T=new Map([["/current-location",function(){window.navigator.geolocation.getCurrentPosition((e=>{const{latitude:a,longitude:s}=e.coords;L(`lat=${a}`,`lon=${s}`)}),(e=>{window.location.hash="#/weather?lat=50.450001&lon=30.523333"}))}],["/weather",e=>L(...e.split("&"))]]),M=function(){const e=window.location.hash.slice(1),[a,s]=e.includes?e.split("?"):[e];T.get(a)?T.get(a)(s):b.style.display="flex"};window.addEventListener("hashchange",M),window.addEventListener("load",(function(){window.location.hash?M():window.location.hash="#/current-location"}))})();